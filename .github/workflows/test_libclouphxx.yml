name: Test libcloudph++

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
#  build_CUDA:
#    runs-on: ubuntu-20.04
#    strategy:
#      matrix:
#        name: ["CUDA"]
#        build_type: ["Debug", "RelWithDebInfo"]
#        include:
#        - name: "CUDA"
#          disable_cuda: false
#          # not enough RAM to compile Debug CUDA on 4 threads
#          threads: 1
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: build libcloudph++
#      #uses: igfuw/libcloudphxx_build@v0.1-beta
#      uses: ./.github/actions/libcloudphxx_build
#      with:
#        disable_cuda: ${{matrix.disable_cuda}}
#        build_type: ${{matrix.build_type}}
#        threads: ${{matrix.threads}}
#        path: ${{ github.workspace }}

  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        name: ["no_CUDA"]
        build_type: ["Debug", "RelWithDebInfo"]
        include:
        - name: "no_CUDA"
          disable_cuda: true
          threads: 4

    steps:
    - uses: actions/checkout@v2

    - name: build libcloudph++
      #uses: igfuw/libcloudphxx_build@v0.1-beta
      uses: ./.github/actions/libcloudphxx_build
      with:
        disable_cuda: ${{matrix.disable_cuda}}
        build_type: ${{matrix.build_type}}
        threads: ${{matrix.threads}}
        path: ${{ github.workspace }}
        install_prefix: ${{ github.workspace }}/installed 

    # tar build dir before upload as artifact to retain permission and case-sensitive names
    - name: Compress libcloudph++ build
      run: tar -cvf build.tar build

    - name: Upload libcloudph++ build
      uses: actions/upload-artifact@v2
      with:
        name: libcloud_build_${{matrix.build_type}}_tar
        path: build.tar

  # test jobs
  unit_test:
    needs: build
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        build_type: ["RelWithDebInfo", "Debug"]

    steps:
    - uses: actions/checkout@v2

    - name: Download libcloudph++ build
      uses: actions/download-artifact@v2
      with:
        name: libcloud_build_${{matrix.build_type}}_tar

    - name: Decompress libcloudph++ build
      run: tar -xvf build.tar

    - name: load UWLCM Singularity image
      #uses: igfuw/libcloudphxx_build@v0.1-beta
      uses: ./.github/actions/load_UWLCM_singularity_image
      with:
        path: ${{ github.workspace }}/singularity_images

    - name: Run unit tests
      working-directory: ${{github.workspace}}/build
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: OMP_NUM_THREADS=4 singularity exec $SI ctest -C ${{matrix.build_type}} || cat Testing/Temporary/LastTest.log / # "/" intentional! (just to make cat exit with an error code)

  parcel_test:
    needs: build
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        build_type: ["RelWithDebInfo", "Debug"]
        include:
        - build_type: "RelWithDebInfo"
          long_tests: true
          debug_tests: false
        - build_type: "Debug"
          long_tests: false
          debug_tests: true


    steps:
    - uses: actions/checkout@v2

    - name: Download libcloudph++ build
      uses: actions/download-artifact@v2
      with:
        name: libcloud_build_${{matrix.build_type}}_tar

    - name: Decompress libcloudph++ build
      run: tar -xvf build.tar

    - name: load UWLCM Singularity image
      #uses: igfuw/libcloudphxx_build@v0.1-beta
      uses: ./.github/actions/load_UWLCM_singularity_image
      with:
        path: ${{ github.workspace }}/singularity_images

    - name: Install libcloudph++
      run: sudo cmake --install build

    - name: Install python3-gnuplot
      run: |
        wget http://ftp.pl.debian.org/debian/pool/main/p/python-gnuplot/python3-gnuplot_1.8-8_all.deb
        sudo apt install ./python3-gnuplot_1.8-8_all.deb

    - name: checkout parcel repo
      uses: actions/checkout@v2
      with:
        repository: igfuw/parcel
        path: parcel

    - run: mkdir parcel/plots/outputs

    - name: run parcel unit_test
      working-directory: ${{github.workspace}}/parcel
      if: ${{matrix.long_tests}}
      run: PYTHONPATH=${{ github.workspace }}/installed/usr/lib/python3/dist-packages singularity exec -B${{ github.workspace }}/installed,/usr/lib/python3/dist-packages/Gnuplot $SI py.test-3 --verbosity=100 unit_test
      #run: PYTHONPATH=${{ github.workspace }}/installed/usr/lib/python3/dist-packages singularity exec -B${{ github.workspace }}/installed,/usr/lib/python3/dist-packages/Gnuplot $SI python3 -m pytest -v unit_test

    - name: run parcel long_test
      working-directory: ${{github.workspace}}/parcel
      if: ${{matrix.long_tests}}
      run: PYTHONPATH=${{ github.workspace }}/installed/usr/lib/python3/dist-packages singularity exec -B${{ github.workspace }}/installed,/usr/lib/python3/dist-packages/Gnuplot $SI python3 -m pytest -v long_test

    - name: run parcel unit_test_debug
      working-directory: ${{github.workspace}}/parcel
      if: ${{matrix.debug_tests}}
      run: PYTHONPATH=${{ github.workspace }}/installed/usr/lib/python3/dist-packages singularity exec -B${{ github.workspace }}/installed,/usr/lib/python3/dist-packages/Gnuplot $SI python3 -m pytest -v unit_test_debug


  kinematic_2D_test:
    needs: build
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        build_type: ["RelWithDebInfo"]

    steps:
    - uses: actions/checkout@v2

    - name: Download libcloudph++ build
      uses: actions/download-artifact@v2
      with:
        name: libcloud_build_${{matrix.build_type}}_tar

    - name: Decompress libcloudph++ build
      run: tar -xvf build.tar

    - name: Install libcloudph++
      run: sudo cmake --install build

    - name: load UWLCM Singularity image
      #uses: igfuw/libcloudphxx_build@v0.1-beta
      uses: ./.github/actions/load_UWLCM_singularity_image
      with:
        path: ${{ github.workspace }}/singularity_images

    - name: checkout libmpdata++ repo
      uses: actions/checkout@v2
      with:
        repository: igfuw/libmpdataxx
        path: libmpdataxx

    - run: echo ${{ github.workspace }}

    - name: Configure libmpdata++ CMake
      working-directory: ${{github.workspace}}/libmpdataxx/libmpdata++
      run: singularity exec $SI cmake -B build
  
    - name: Build libmpdata++
      working-directory: ${{github.workspace}}/libmpdataxx/libmpdata++
      run: VERBOSE=1 singularity exec $SI cmake --build build 

    - name: Install libmpdata++
      working-directory: ${{github.workspace}}/libmpdataxx/libmpdata++
      run: sudo cmake --install build

    - name: Configure kinematic_2D CMake
      working-directory: ${{github.workspace}}/models/kinematic_2D
      run: singularity exec -B /usr/local,${{ github.workspace }}/installed/share/libcloudph++ $SI cmake -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -Dlibcloudph++_DIR=${{ github.workspace }}/installed/share/libcloudph++
  
    - name: Build kinematic_2D 
      working-directory: ${{github.workspace}}/models/kinematic_2D
      run: VERBOSE=1 singularity exec -B /usr/local,${{ github.workspace }}/installed/share/libcloudph++ $SI cmake --build build --config ${{matrix.build_type}} 

    - name: Run kinematic_2D tests
      working-directory: ${{github.workspace}}/models/kinematic_2D/build
      run: |
        singularity exec -B /usr/local,${{ github.workspace }}/installed/share/libcloudph++ $SI ctest -VV -R travis # compare icicle results against reference data (done for full simulation for bulk schemes and a couple of steps for lagrangian)
        cat Testing/Temporary/LastTest.log

  build_and_test_KiD-A:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        name: ["no_CUDA"]
        build_type: ["RelWithDebInfo"]
        include:
        - name: "no_CUDA"
          disable_cuda: true
          threads: 4

    steps:
    - uses: actions/checkout@v2

    - name: merge with the KiD-A branch
      uses: devmasx/merge-branch@1.4.0
      with:
        type: now
        target_branch: kida-1d
        github_token: ${{ github.token }}

    - name: build libcloudph++
      #uses: igfuw/libcloudphxx_build@v0.1-beta
      uses: ./.github/actions/libcloudphxx_build
      with:
        disable_cuda: ${{matrix.disable_cuda}}
        build_type: ${{matrix.build_type}}
        threads: ${{matrix.threads}}
        path: ${{ github.workspace }}

    - name: Install libcloudph++
      run: sudo cmake --install build

    - name: checkout KiD-libcloud repo
      uses: actions/checkout@v2
      with:
        repository: igfuw/kid-libcloud
        path: kid-libcloud

    - name: run KiD LWP test
      working-directory: ${{github.workspace}}/kid-libcloud
      run: singularity exec $SI . ./.travis_scripts/lwp_test.sh
#        sudo apt install nco
        
